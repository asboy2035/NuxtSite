<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="85f21143-7382-478f-90b5-9a059d90a25e" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/App.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/asboy2035-nuxt.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/apps/AppLink.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/apps/AppStoreIcon.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/apps/GithubIcon.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/apps/LinkIcon.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/apps/UpdatedBadge.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/charCards/CardPreview.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/charCards/CustomizerPanel.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/home/AboutHeader.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/home/AboutSidebar.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/home/cards/AboutCard.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/home/cards/LangsCard.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/home/cards/LocationCard.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/layout/Card.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/layout/Grid.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/layout/HStack.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/layout/InteriorItem.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/layout/VStack.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/links/LinkItem.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/links/MoreLinks.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/links/SocialLinks.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/links/SupportLinks.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/playlists/AppleMusic.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/playlists/Deezer.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/playlists/Spotify.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/playlists/YoutubeMusic.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/premade/BottomFooter.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/premade/Description.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/premade/FullscreenCover.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/premade/TransitionElement.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/premade/Transitionable.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/premade/navbar/Navbar.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/premade/navbar/NavigationButton.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/premade/navbar/NavigationLinks.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/premade/navbar/SitePick.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/premade/navbar/SitePicker.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/utils/BannerNotification.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/utils/CardTitle.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/utils/Divider.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/utils/DynamicImage.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/utils/Hero.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/utils/Modal.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/utils/Spacer.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/apps.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/main.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/nuxt.config.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/package-lock.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pages/apps/[slug].vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pages/apps/index.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pages/create/charcard.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pages/goodies.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pages/index.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pages/links.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pages/playlists/[slug].vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pages/tests/audio.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/plugins/updateCanonical.client.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/apps/audioTest.mov" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/apps/markdown/stand.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/audioTest.mp3" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/cursors/bibataModern/Camera-v2.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/cursors/bibataModern/Copy.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/cursors/bibataModern/Pointer.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/cursors/bibataModern/Pointing-Hand.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/cursors/bibataModern/ash.bibatamodern.cape" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/favicon.ico" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/images/Apps.jpg" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/images/Bordeaux.webp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/images/Creator.jpg" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/images/Goodies.jpg" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/images/Links.jpg" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/images/Playlists.jpg" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/images/Stand-Hero.jpeg" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/images/avatar.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/images/icons/BigTime-Icon.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/images/icons/CharCard-Icon.jpg" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/images/icons/Stand-Icon.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/robots.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/sitemap.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/yass.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/server/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/styles/animations.sass" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/styles/button.sass" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/styles/colors.sass" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/styles/fonts.sass" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/styles/global.sass" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/styles/navigation.sass" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/styles/utilities.sass" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/types/shims-sass.d.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/types/shims-vue.d.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="TypeScript File" />
        <option value="Vue Composition API Component" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo"><![CDATA[{
  "associatedIndex": 8
}]]></component>
  <component name="ProjectId" id="2yxnrGuSyB5nzJx9RxlRIFQ2Iof" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_MARK_IGNORED_FILES_AS_EXCLUDED": "true",
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "master",
    "last_opened_file_path": "/Users/ash/IdeaProjects/asboy2035-nuxt/src",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_interpreter_path": "node",
    "nodejs_package_manager_path": "npm",
    "npm.cleanup.executor": "Run",
    "npm.dev.executor": "Run",
    "npm.reInit.executor": "Run",
    "settings.editor.selected.configurable": "reference.settingsdialog.IDE.editor.colors.Language Defaults",
    "ts.external.directory.path": "/Users/ash/Applications/IntelliJ IDEA Ultimate.app/Contents/plugins/javascript-plugin/jsLanguageServicesImpl/external",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "vue.recent.templates": [
      "Vue Composition API Component"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src" />
      <recent name="$PROJECT_DIR$" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/data" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/public" />
      <recent name="$PROJECT_DIR$/src/assets" />
      <recent name="$PROJECT_DIR$/src" />
    </key>
  </component>
  <component name="RunManager" selected="npm.dev">
    <configuration name="build" type="js.build_tools.npm" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="build" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="cleanup" type="js.build_tools.npm" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="cleanup" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="dev" type="js.build_tools.npm">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="dev" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="reInit" type="js.build_tools.npm" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="reInit" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="npm.dev" />
      <item itemvalue="npm.cleanup" />
      <item itemvalue="npm.reInit" />
      <item itemvalue="npm.build" />
    </list>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-fbdcb00ec9e3-intellij.indexing.shared.core-IU-251.26927.53" />
        <option value="bundled-js-predefined-d6986cc7102b-09060db00ec0-JavaScript-IU-251.26927.53" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="85f21143-7382-478f-90b5-9a059d90a25e" name="Changes" comment="" />
      <created>1743535360667</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1743535360667</updated>
      <workItem from="1743535360668" duration="84000" />
      <workItem from="1750785290014" duration="6108000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>